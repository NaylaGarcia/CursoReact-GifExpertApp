{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAkB5C,OACI,sBAAMC,SAZU,SAACC,GACjBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAQlB,SACI,uBAAOO,KAAK,OACZC,MAAOT,EACPU,SAnBgB,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DACXC,EADW,iDACmCC,UAAUH,GAD7C,+DAECI,MAAMF,GAFP,cAEXG,EAFW,gBAGIA,EAAKC,OAHT,uBAGVC,EAHU,EAGVA,KACDC,EAAKD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACtB,MAAM,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARrB,kBAYVM,GAZU,4CAAD,sDCAPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OACI,sBAAKc,UAAU,yCAAf,UACG,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFFO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECAX,SAACA,GAAc,IAAD,EACdd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAH4B,mBACjCC,EADiC,KAC1BC,EAD0B,KAe1C,OAVEC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAAAC,GACAH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAIpB,CAACpB,IACEqB,EDbsBK,CAAa1B,GAA9Ba,EAF2B,EAEhCN,KAAYa,EAFoB,EAEpBA,QAEf,OACG,qCACC,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAS,mBAAGJ,UAAU,mCAAb,qBACV,qBAAKA,UAAU,YAAf,SAIWH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEejBgB,EA9BI,WAAI,MAEazC,mBAAS,CAAC,eAFvB,mBAEhB0C,EAFgB,KAEJ3C,EAFI,KAQvB,OACG,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAWA,GADLA,Y,MChBrB6B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.2089a255.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n   \r\n    const handleInputChange=(e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n            setCategories(cats=>[inputValue,...cats]);\r\n            setInputValue('');\r\n\r\n        }\r\n       \r\n\r\n\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" \r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\nsetCategories:PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","\r\n\r\nexport const getGifs=async(category)=>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=IR7Zqi1UZKPAhjTG2Y6Rm8XxUIN7GgFq&limit=10`;\r\n    const resp= await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs=data.map(img=>{\r\n       return{\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url\r\n       }\r\n    })\r\n    //console.log(gifs);\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    //console.log({id,title,url});\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n           <img src={url} alt={title}/>\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\nconst {data:images,loading}= useFetchGifs(category);\r\n\r\n    return (\r\n       <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n        {loading&&<p className=\"animate__animated animate__flash\">Loading</p>}\r\n        <div className=\"card-grid\">\r\n           \r\n                     \r\n               {\r\n                   images.map(img=>(\r\n                       <GifGridItem \r\n                       key={img.id}\r\n                       {...img}/>\r\n                    ))\r\n               }\r\n        \r\n        </div>\r\n       </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n      data:[],\r\n      loading:true\r\n  });\r\n  useEffect(()=>{\r\n      getGifs(category)\r\n      .then(imgs=>{\r\n            setState({\r\n                data:imgs,\r\n                loading:false\r\n            });\r\n      })\r\n\r\n  },[category])\r\nreturn state;\r\n}\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp=()=>{\r\n    //const categorias=['BTS','ONEOKROCK','RANDWIMPS'];\r\nconst [categories, setCategories] = useState(['Mario Bros']);\r\n// const handleAdd=()=>{\r\n// //setCategories([...categories,'BT21']);\r\n// setCategories(cats=>[...cats,'BT21']);\r\n// }  \r\n\r\nreturn  (\r\n   <>\r\n   <h2>GifExpertApp</h2>\r\n   <AddCategory setCategories={setCategories}/>\r\n   <hr/>\r\n   {/* <button onClick={handleAdd}>Agregar</button> */}\r\n   <ol>\r\n       {\r\n           categories.map(category=>(\r\n               <GifGrid \r\n               key={ category }\r\n               category={ category } />\r\n           ))\r\n       }\r\n   </ol>\r\n   \r\n \r\n   </>\r\n);\r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}